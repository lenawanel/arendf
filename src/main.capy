core :: mod "core";
png :: import "png.capy";
util :: import "util.capy";
term :: import "term.capy";
vec :: import "vec.capy";

main :: () -> i32 {
	png_file :: util.open("img.png", 0);
	size :: util.lseek(png_file, 0, 2);

	util.lseek(png_file, 0, 0);
	png_ptr :: util.mmap(core.ptr.null(), size as usize, 1, 2, png_file, 0);
	defer util.munmap(png_ptr, size as usize);

	util.close(png_file);

	texture :: png.decode(util.construct_u8slice(png_ptr as ^u8, size as usize));
	defer vec.dealloc(texture.inner);

	term.render(^texture);
	// core.println(texture);
	// util.sleep(5);

	0
}
